import telebot
from telebot import types
from pathlib import Path
import config
import function

Path(f'Download/Photo/').mkdir(parents=True, exist_ok=True)
Path(f'Download/Video/').mkdir(parents=True, exist_ok=True)

class PostingBot:
    def __init__(self):
        self.downloaded_file = None
        self.fileid = None
        self.token = config.TOKEN
        self.bot = telebot.TeleBot(self.token)

        print('–ó–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –≤ Telegram')

        @self.bot.message_handler(commands=['start'])
        def start_command(message):
            if message.chat.id == config.MY_USER_ID:
                # function.login_user()
                self.bot.send_message(message.from_user.id, f'üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!'
                                                            f'\n–ü–æ–¥–µ–ª–∏—Å—å —Å–æ –º–Ω–æ–π —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –∏ —è –∑–∞–≥—Ä—É–∂—É –∏—Ö '
                                                            f'–≤ —Ç–≤–æ–π –∏–Ω—Å—Ç–∞–≥—Ä–∞–º!')

                @self.bot.message_handler(commands=['ping'])
                def ping(ping_message):
                    self.bot.send_message(ping_message.from_user.id, '–Ø —Ç—É—Ç')

                @self.bot.message_handler(content_types=['photo'])
                def photo(photo_message):

                    function.photo_cleanup()
                    self.fileid = photo_message.photo[-1].file_id
                    self.file_info = self.bot.get_file(self.fileid)
                    self.downloaded_file = self.bot.download_file(self.file_info.file_path)
                    with open("image.jpg", 'wb') as new_file:
                        new_file.write(self.downloaded_file)

                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    btn1 = types.KeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ –≤ –ª–µ–Ω—Ç—É')
                    btn2 = types.KeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ –≤ —Å—Ç–æ—Ä–∏—Å')
                    btn3 = types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ')
                    markup.add(btn1, btn2, btn3)
                    self.bot.send_message(photo_message.from_user.id, '–ö—É–¥–∞ –≤—ã–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ‚ùì', reply_markup=markup)
                    self.bot.register_next_step_handler(photo_message, photo_text)

                @self.bot.message_handler(content_types=['text'])
                def photo_text(photo_text_message):

                    if photo_text_message.text == '–í—ã–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ –≤ –ª–µ–Ω—Ç—É':
                        status = function.photo_upload_feed()
                        if status == 'OK':
                            self.bot.reply_to(photo_text_message, '–ó–∞–ø–æ—Å—Ç–∏–ª')
                        else:
                            self.bot.reply_to(photo_text_message, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.')

                    if photo_text_message.text == '–í—ã–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ –≤ —Å—Ç–æ—Ä–∏—Å':
                        status = function.photo_upload_story()
                        if status == 'OK':
                            self.bot.reply_to(photo_text_message, '–ó–∞–ø–æ—Å—Ç–∏–ª')
                        else:
                            self.bot.reply_to(photo_text_message, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.')

                    if photo_text_message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ':
                        src = f'Download/Photo/' + str(photo_text_message.date) + '.jpg'
                        with open(src, 'wb') as new_file:
                            new_file.write(self.downloaded_file)
                        self.bot.reply_to(photo_text_message, '–°–æ—Ö—Ä–∞–Ω–∏–ª')

                @self.bot.message_handler(content_types=['video'])
                def video(video_message):

                    function.video_cleanup()
                    self.fileid = video_message.video.file_id
                    self.file_info = self.bot.get_file(self.fileid)
                    self.downloaded_file = self.bot.download_file(self.file_info.file_path)
                    with open('video.mp4', 'wb') as new_file:
                        new_file.write(self.downloaded_file)

                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    btn1 = types.KeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å –≤–∏–¥–µ–æ –≤ –ª–µ–Ω—Ç—É')
                    btn2 = types.KeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å –≤–∏–¥–µ–æ –≤ —Å—Ç–æ—Ä–∏—Å')
                    btn3 = types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ')
                    markup.add(btn1, btn2, btn3)
                    self.bot.send_message(video_message.from_user.id, '–ö—É–¥–∞ –≤—ã–ª–æ–∂–∏—Ç—å –≤–∏–¥–µ–æ‚ùì', reply_markup=markup)
                    self.bot.register_next_step_handler(video_message, video_text)

                @self.bot.message_handler(content_types=['text'])
                def video_text(video_text_message):

                    if video_text_message.text == '–í—ã–ª–æ–∂–∏—Ç—å –≤–∏–¥–µ–æ –≤ –ª–µ–Ω—Ç—É':
                        status = function.video_upload_feed()
                        if status == 'OK':
                            self.bot.reply_to(video_text_message, '–ó–∞–ø–æ—Å—Ç–∏–ª.')
                        else:
                            self.bot.reply_to(video_text_message, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.'
                                                                  '\n–í–æ–∑–º–æ–∂–Ω–æ, –≤–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ.')

                    if video_text_message.text == '–í—ã–ª–æ–∂–∏—Ç—å –≤–∏–¥–µ–æ –≤ —Å—Ç–æ—Ä–∏—Å':
                        status = function.video_upload_story()
                        if status == 'OK':
                            self.bot.reply_to(video_text_message, '–ó–∞–ø–æ—Å—Ç–∏–ª.')
                        else:
                            self.bot.reply_to(video_text_message, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.'
                                                                  '\n–í–æ–∑–º–æ–∂–Ω–æ, –≤–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ.')

                    if video_text_message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ':
                        src = f'Download/Video/' + str(video_text_message.date) + '.mp4'
                        with open(src, 'wb') as new_file:
                            new_file.write(self.downloaded_file)
                        self.bot.reply_to(video_text_message, '–°–æ—Ö—Ä–∞–Ω–∏–ª')

            else:
                self.bot.reply_to(message, '–°–æ—Ä—è–Ω, —ç—Ç–æ—Ç –±–æ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π!')

    def run(self):
        self.bot.polling()


if __name__ == '__main__':
    Tele = PostingBot()
    Tele.run()
